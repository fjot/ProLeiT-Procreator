import { makeExecutableSchema } from "graphql-tools";
import { mergeTypeDefs } from "./typedefs-mergers/merge-typedefs";
import { asArray } from "../utils/helpers";
import { mergeResolvers } from "./resolvers-mergers/merge-resolvers";
import { extractResolversFromSchema, composeResolvers } from "../utils";
export function mergeSchemas({ schemas, typeDefs, resolvers, resolversComposition, schemaDirectives, resolverValidationOptions, logger }) {
    return makeExecutableSchema({
        typeDefs: mergeTypeDefs([
            ...schemas,
            ...typeDefs ? asArray(typeDefs) : []
        ]),
        resolvers: composeResolvers(mergeResolvers([
            ...schemas.map(schema => extractResolversFromSchema(schema)),
            ...resolvers ? asArray(resolvers) : []
        ]), resolversComposition || {}),
        schemaDirectives,
        resolverValidationOptions,
        logger
    });
}
//# sourceMappingURL=merge-schemas.js.map