!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define("ngx-indexed-db",["exports"],r):r(e["ngx-indexed-db"]={})}(this,function(e){"use strict";var r=function(){function e(e,r){this.utils=new t,this.dbWrapper=new o(e,r)}return e.prototype.openDatabase=function(e,n){var a=this;return new Promise(function(r,t){a.dbWrapper.dbVersion=e;var o=a.utils.indexedDB.open(a.dbWrapper.dbName,e);o.onsuccess=function(e){a.dbWrapper.db=o.result,r()},o.onerror=function(e){t((e.target.errorCode,e.target.errorCode+" ("+e.target.error+")"))},"function"==typeof n&&(o.onupgradeneeded=function(e){n(e,a.dbWrapper.db)})})},e.prototype.getByKey=function(t,o){var n=this;return new Promise(function(r,e){n.dbWrapper.validateBeforeTransaction(t,e),n.dbWrapper.createTransaction(n.dbWrapper.optionsGenerator(u.readonly,t,e,r)).objectStore(t).get(o).onsuccess=function(e){r(e.target.result)}})},e.prototype.getAll=function(d,p,s){var c=this;return new Promise(function(t,r){c.dbWrapper.validateBeforeTransaction(d,r);var e,o=c.dbWrapper.createTransaction(c.dbWrapper.optionsGenerator(u.readonly,d,r,t)).objectStore(d),n=[];if(s){var a=o.index(s.indexName),i="desc"===s.order?"prev":"next";e=a.openCursor(p,i)}else e=o.openCursor(p);e.onerror=function(e){r(e)},e.onsuccess=function(e){var r=e.target.result;r?(n.push(r.value),r["continue"]()):t(n)}})},e.prototype.add=function(t,o,n){var a=this;return new Promise(function(e,r){a.dbWrapper.validateBeforeTransaction(t,r),a.dbWrapper.createTransaction(a.dbWrapper.optionsGenerator(u.readwrite,t,r,e)).objectStore(t).add(o,n).onsuccess=function(e){n=e.target.result}})},e.prototype.update=function(t,o,n){var a=this;return new Promise(function(e,r){a.dbWrapper.validateBeforeTransaction(t,r),a.dbWrapper.createTransaction(a.dbWrapper.optionsGenerator(u.readwrite,t,r,e)).objectStore(t).put(o,n)})},e.prototype["delete"]=function(t,o){var n=this;return new Promise(function(e,r){n.dbWrapper.validateBeforeTransaction(t,r),n.dbWrapper.createTransaction(n.dbWrapper.optionsGenerator(u.readwrite,t,r,e)).objectStore(t)["delete"](o)})},e.prototype.openCursor=function(t,o,n){var a=this;return new Promise(function(r,e){a.dbWrapper.validateBeforeTransaction(t,e),a.dbWrapper.createTransaction(a.dbWrapper.optionsGenerator(u.readonly,t,e,r)).objectStore(t).openCursor(n).onsuccess=function(e){o(e),r()}})},e.prototype.clear=function(t){var o=this;return new Promise(function(e,r){o.dbWrapper.validateBeforeTransaction(t,r),o.dbWrapper.createTransaction(o.dbWrapper.optionsGenerator(u.readwrite,t,r,e)).objectStore(t).clear(),e()})},e.prototype.getByIndex=function(t,o,n){var a=this;return new Promise(function(r,e){a.dbWrapper.validateBeforeTransaction(t,e),a.dbWrapper.createTransaction(a.dbWrapper.optionsGenerator(u.readonly,t,e,r)).objectStore(t).index(o).get(n).onsuccess=function(e){r(e.target.result)}})},e}(),t=function n(){this.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},o=function(){function e(e,r){this.dbName=e,this.dbVersion=r||1}return e.prototype.validateStoreName=function(e){return this.db.objectStoreNames.contains(e)},e.prototype.validateBeforeTransaction=function(e,r){this.db||r("You need to use the openDatabase function to create a database before you query it!"),this.validateStoreName(e)||r("objectStore does not exists: "+e)},e.prototype.createTransaction=function(e){var r=this.db.transaction(e.storeName,e.dbMode);return r.onerror=e.error,r.oncomplete=e.complete,r.onabort=e.abort,r},e.prototype.optionsGenerator=function(e,r,t,o){return{storeName:r,dbMode:e,error:function(e){t(e)},complete:function(e){o()},abort:function(e){t(e)}}},e}(),u={readonly:"readonly",readwrite:"readwrite"};e.NgxIndexedDB=r,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-indexed-db.umd.min.js.map